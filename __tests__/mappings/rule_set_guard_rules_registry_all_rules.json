{
  "owner": "AWS",
  "ruleSetName": "guard-rules-registry-all-rules",
  "version": "1.0.0",
  "description": "All AWS Guard Rules Registry in single rule set",
  "contact": "aws-guard-rules-registry@amazon.com",
  "mappings": [
    {
      "guardFilePath": "__tests__/rules/aws/codebuild/codebuild_project_source_repo_url_check.guard",
      "reportsOn": [
        "AWS::CodeBuild::Project"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/codebuild/codebuild_project_envvar_awscred_check.guard",
      "reportsOn": [
        "AWS::CodeBuild::Project"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ecs/ecs_task_definition_user_for_host_mode_check.guard",
      "reportsOn": [
        "AWS::ECS::TaskDefinition"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudwatch/cloudwatch_alarm_action_check.guard",
      "reportsOn": [
        "AWS::CloudWatch::Alarm",
        "AWS::Logs::LogGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudwatch/cw_loggroup_retention_period_check.guard",
      "reportsOn": [
        "AWS::Logs::LogGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudwatch/cloudwatch_log_group_encrypted.guard",
      "reportsOn": [
        "AWS::Logs::LogGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/aws_dms/dms_replication_not_public.guard",
      "reportsOn": [
        "AWS::DMS::ReplicationInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_fsx/fsx_resources_protected_by_backup_plan.guard",
      "reportsOn": [
        "AWS::FSx::FileSystem"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/api_gateway_v2/api_gw_execution_logging_enabled.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/api_gateway_v2/api_gwv2_access_logs_enabled.guard",
      "reportsOn": [
        "AWS::ApiGateway::Stage",
        "AWS::ApiGatewayV2::Stage"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_ssl_requests_only.guard",
      "reportsOn": [
        "AWS::S3::Bucket",
        "AWS::S3::BucketPolicy"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_logging_enabled.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_public_write_prohibited.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_public_read_prohibited.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_default_encryption_kms.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_versioning_enabled.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_level_public_access_prohibited.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_server_side_encryption_enabled.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_policy_grantee_check.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_default_lock_enabled.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_s3/s3_bucket_replication_enabled.guard",
      "reportsOn": [
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_accesslogs_enabled.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_custom_ssl_certificate.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_origin_failover_enabled.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_sni_enabled.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_origin_access_identity_enabled.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution",
        "AWS::S3::Bucket"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_viewer_policy_https.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_default_root_object_configured.guard",
      "reportsOn": [
        "AWS::CloudFront::Distribution"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudfront/cloudfront_associated_with_waf.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_sns/sns_encrypted_kms.guard",
      "reportsOn": [
        "AWS::SNS::Topic"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing_v2/alb_http_drop_invalid_header_enabled.guard",
      "reportsOn": [
        "AWS::ElasticLoadBalancingV2::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing_v2/elb_deletion_protection_enabled.guard",
      "reportsOn": [
        "AWS::ElasticLoadBalancingV2::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing_v2/alb_waf_enabled.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing_v2/alb_http_to_https_redirection_check.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing_v2/elbv2_acm_certificate_required.guard",
      "reportsOn": [
        "AWS::CertificateManager::Certificate",
        "AWS::ElasticLoadBalancingV2::Listener"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/api_gateway/api_gw_cache_enabled_and_encrypted.guard",
      "reportsOn": [
        "AWS::ApiGateway::Stage"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/api_gateway/api_gw_execution_logging_enabled.guard",
      "reportsOn": [
        "AWS::ApiGateway::Stage"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/api_gateway/api_gw_endpoint_type_check.guard",
      "reportsOn": [
        "AWS::ApiGateway::DomainName"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/api_gateway/api_gw_domain_deny_non_tls_traffic.guard",
      "reportsOn": [
        "AWS::ApiGateway::DomainName"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_redshift/redshift_cluster_public_access_check.guard",
      "reportsOn": [
        "AWS::EKS::Cluster",
        "AWS::Redshift::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_redshift/redshift_backup_enabled.guard",
      "reportsOn": [
        "AWS::Redshift::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_redshift/redshift_cluster_maintenancesettings_check.guard",
      "reportsOn": [
        "AWS::Redshift::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_redshift/redshift_enhanced_vpc_routing_enabled.guard",
      "reportsOn": [
        "AWS::Redshift::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_redshift/redshift_cluster_configuration_check.guard",
      "reportsOn": [
        "AWS::Redshift::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_sagemaker/sagemaker_notebook_instance_kms_key_configured.guard",
      "reportsOn": [
        "AWS::SageMaker::NotebookInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_sagemaker/sagemaker_endpoint_configuration_kms_key_configured.guard",
      "reportsOn": [
        "AWS::SageMaker::Endpoint",
        "AWS::SageMaker::EndpointConfig"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_sagemaker/sagemaker_notebook_no_direct_internet_access.guard",
      "reportsOn": [
        "AWS::SageMaker::NotebookInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_resources_protected_by_backup_plan.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_table_must_be_encrypted.guard",
      "reportsOn": [
        "AWS::DynamoDB::Table"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_table_encrypted_kms.guard",
      "reportsOn": [
        "AWS::DynamoDB::Table"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_in_backup_plan.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_throughput_limit_check.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_pitr_enabled.guard",
      "reportsOn": [
        "AWS::DynamoDB::Table"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dynamodb/dynamodb_autoscaling_enabled.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/secrets_manager/secretsmanager_rotation_enabled_check.guard",
      "reportsOn": [
        "AWS::SecretsManager::RotationSchedule",
        "AWS::SecretsManager::Secret"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/secrets_manager/secretsmanager_using_cmk.guard",
      "reportsOn": [
        "AWS::SageMaker::Endpoint",
        "AWS::SageMaker::EndpointConfig",
        "AWS::SecretsManager::Secret"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing/elb_acm_certificate_required.guard",
      "reportsOn": [
        "AWS::CertificateManager::Certificate",
        "AWS::ElasticLoadBalancing::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing/elb_predefined_security_policy_ssl_check.guard",
      "reportsOn": [
        "AWS::ElasticLoadBalancing::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing/elb_tls_https_listeners_only.guard",
      "reportsOn": [
        "AWS::ElasticLoadBalancing::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing/elb_logging_enabled.guard",
      "reportsOn": [
        "AWS::ElasticLoadBalancing::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_load_balancing/elb_cross_zone_load_balancing_enabled.guard",
      "reportsOn": [
        "AWS::ElasticLoadBalancing::LoadBalancer"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/aws_waf_v2/wafv2_logging_enabled.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_beanstalk/elastic_beanstalk_managed_updates_enabled.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elastic_beanstalk/beanstalk_enhanced_health_reporting_enabled.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_emr/emr_master_no_public_ip.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_emr/emr_kerberos_enabled.guard",
      "reportsOn": [
        "AWS::EMR::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_logging_enabled.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_instance_public_access_check.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/db_instance_backup_enabled.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_automatic_minor_version_upgrade_enabled.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/aurora_mysql_backtracking_enabled.guard",
      "reportsOn": [
        "AWS::RDS::DBCluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_multi_az_support.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_snapshot_encrypted.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_enhanced_monitoring_enabled.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_instance_deletion_protection_enabled.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_rds/rds_storage_encrypted.guard",
      "reportsOn": [
        "AWS::RDS::DBInstance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudtrail/cloud_trail_log_file_validation_enabled.guard",
      "reportsOn": [
        "AWS::CloudTrail::Trail"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudtrail/cloud_trail_enabled.guard",
      "reportsOn": [
        "AWS::CloudTrail::Trail"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudtrail/cloudtrail_s3_dataevents_enabled.guard",
      "reportsOn": [
        "AWS::CloudTrail::Trail"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudtrail/cloud_trail_cloud_watch_logs_enabled.guard",
      "reportsOn": [
        "AWS::CloudTrail::Trail"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudtrail/multi_region_cloud_trail_enabled.guard",
      "reportsOn": [
        "AWS::CloudTrail::Trail"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/cloudtrail/cloud_trail_encryption_enabled.guard",
      "reportsOn": [
        "AWS::CloudTrail::Trail"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_primary_node_fault_tolerance.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_in_vpc_only.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_application_logging_enabled.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_data_node_fault_tolerance.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_audit_logging_enabled.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_encrypted_at_rest.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_data_node_fault_tolerance.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_https_required.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_in_vpc_only.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_node_to_node_encryption_check.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_application_logging_enabled.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_logs_to_cloudwatch.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_https_required.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_node_to_node_encryption_check.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_access_control_enabled.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/opensearch_audit_logging_enabled.guard",
      "reportsOn": [
        "AWS::OpenSearchService::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/opensearch_service/elasticsearch_encrypted_at_rest.guard",
      "reportsOn": [
        "AWS::Elasticsearch::Domain"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2_auto_scaling/autoscaling_group_elb_healthcheck_required.guard",
      "reportsOn": [
        "AWS::AutoScaling::AutoScalingGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2_auto_scaling/autoscaling_launch_config_public_ip_disabled.guard",
      "reportsOn": [
        "AWS::AutoScaling::LaunchConfiguration"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_efs/efs_resources_protected_by_backup_plan.guard",
      "reportsOn": [
        "AWS::EFS::FileSystem"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_efs/efs_encrypted_check.guard",
      "reportsOn": [
        "AWS::EFS::FileSystem"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/iam/iam_user_no_policies_check.guard",
      "reportsOn": [
        "AWS::IAM::User"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/iam/iam_policy_no_statements_with_full_access.guard",
      "reportsOn": [
        "AWS::IAM::ManagedPolicy"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/iam/iam_policy_no_statements_with_admin_access.guard",
      "reportsOn": [
        "AWS::IAM::Policy"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/iam/iam_no_inline_policy_check.guard",
      "reportsOn": [
        "AWS::IAM::Group",
        "AWS::IAM::Role",
        "AWS::IAM::User"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/restricted_common_ports.guard",
      "reportsOn": [
        "AWS::EC2::SecurityGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/ec2_instances_in_vpc.guard",
      "reportsOn": [
        "AWS::EC2::Instance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/ec2_ebs_encryption_by_default.guard",
      "reportsOn": [
        "AWS::EC2::Volume"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/ec2_instance_detailed_monitoring_enabled.guard",
      "reportsOn": [
        "AWS::EC2::Instance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/subnet_auto_assign_public_ip_disabled.guard",
      "reportsOn": [
        "AWS::EC2::Subnet"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/no_unrestricted_route_to_igw.guard",
      "reportsOn": [
        "AWS::EC2::Route"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/encrypted_volumes.guard",
      "reportsOn": [
        "AWS::EC2::Volume"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/restricted_ssh.guard",
      "reportsOn": [
        "AWS::EC2::SecurityGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/ec2_instance_no_public_ip.guard",
      "reportsOn": [
        "AWS::EC2::Instance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/ebs_optimized_instance.guard",
      "reportsOn": [
        "AWS::EC2::Instance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_ec2/ec2_instance_profile_attached.guard",
      "reportsOn": [
        "AWS::EC2::Instance"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/lambda/lambda_inside_vpc.guard",
      "reportsOn": [
        "AWS::Lambda::Function"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/lambda/lambda_concurrency_check.guard",
      "reportsOn": [
        "AWS::Lambda::Function"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/lambda/lambda_function_public_access_prohibited.guard",
      "reportsOn": [
        "AWS::Lambda::LayerVersion",
        "AWS::Lambda::LayerVersionPermission",
        "AWS::Lambda::Permission"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/lambda/lambda_dlq_check.guard",
      "reportsOn": [
        "AWS::Lambda::Function"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/aws_backup/backup_plan_min_frequency_and_min_retention_check.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/aws_kms/kms_cmk_not_scheduled_for_deletion.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/aws_kms/cmk_backing_key_rotation_enabled.guard",
      "reportsOn": [
        "AWS::KMS::Key"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/dax/dax_encryption_enabled.guard",
      "reportsOn": [
        "AWS::CodeBuild::Project",
        "AWS::DAX::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/elasticache/elasticache_redis_cluster_automatic_backup_check.guard",
      "reportsOn": [
        "AWS::ElastiCache::ReplicationGroup"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/aws_certificate_manager/acm_certificate_expiration_check.guard",
      "reportsOn": [],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    },
    {
      "guardFilePath": "__tests__/rules/aws/amazon_eks/eks_endpoint_no_public_access.guard",
      "reportsOn": [
        "AWS::EKS::Cluster"
      ],
      "controls": [
        "all rules in AWS Guard Rules Registry"
      ]
    }
  ]
}